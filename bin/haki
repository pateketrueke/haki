#!/bin/sh
':' // ; exec "$(command -v nodejs || command -v node)" "$0" "$@"
;

'use strict';

/* eslint-disable global-require */

const $ = require('wargs')(process.argv.slice(2));

const thisPkg = require('../package.json');

const cleanStack = require('clean-stack');
const findup = require('findup-sync');
const chalk = require('chalk');
const path = require('path');

let _task = $._.shift();

const _ = require('./lib/util');
const _bin = path.basename(thisPkg.bin);

const _tasks = [
  `  Other actions:
    ${_bin} g|add|generate [...]
    ${_bin} s|up|start [...]
    ${_bin} repl`,
  `  HALP
    -x, --eXtra         # OK`,
];

function showTask(params) {
  return params;
}

function showHelp() {
  _.echo(`  Usage:
    ${_bin} init [...]
__TASKS__
`.replace('__TASKS__', _tasks.length
  ? `\n${_tasks.map(showTask).join('\n\n')}`
  : '\n'));
}

try {
  const Hakifile = findup('Hakifile.js', { nocase: true });
  console.log('>', Hakifile, _task, $);
} catch (e) {
  _.echo(chalk.red(($.flags.debug && cleanStack(e.stack)) || e.message), '\n');
  _.die(1);
}

if ($.flags.version) {
  _.echo(chalk.green(`${thisPkg.name} v${thisPkg.version}`), '\n');
  _.die();
}

if ($.flags.help) {
  showHelp();
  _.die();
}
process.on('SIGINT', () => process.exit());
